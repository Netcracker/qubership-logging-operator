# First we count total fields in record after regex and built-in parsers were applied
[FILTER]
    Name           lua
    Match_regex    (pods|klog).*
    Script         /fluent-bit/etc/count_fields.lua
    Call           second_count_fields

# Then we parse all dynamic [key=value] pairs (Qubership format) if parsed is true
[FILTER]
    Name           lua
    Match          pods*
    script         /fluent-bit/etc/parse_key_value.lua
    call           kv_parse

[FILTER]
    Name           modify
    Match_Regex    pods.*grafana.*
    Condition Key_value_matches  parsed  true
    Condition Key_value_matches  log /Invalid\susername\sor\spassword|Successful\sLogin|Successful\sLogout|Failed\sto\slook\sup\suser\sbased\son\scookie/
    Set            nc_audit_label true

[FILTER]
    Name           modify
    Match_Regex    pods.*mongo.*
    Condition Key_value_matches  parsed  true
    Condition Key_value_matches  log /ACCESS|CONTROL/
    Set            nc_audit_label true

[FILTER]
    Name           modify
    Match          pods*
    Condition Key_value_matches  parsed  true
    Condition Key_value_matches  log /access-control|PG_SERVICE|database\ssystem\sis|audit_log_type|AUDIT|logType[\":\s\t=]*audit|org\.qubership\.security\.audit.*CEF|org\.qubership\.cloud\.keycloak\.provider.*/
    Set            nc_audit_label true

# If a record was parsed then
# copy log to short_message if short_message doesn't exist
# rename log field so it won't be processed further by generic chain of filters (to be removed at all in future releases)
[FILTER]
    Name           modify
    Match_regex    (pods|klog).*
    Condition      Key_value_matches    parsed    true
    Copy           log        short_message
    Hard_rename    log        original_log
