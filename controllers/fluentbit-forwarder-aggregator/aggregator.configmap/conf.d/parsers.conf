##################### Common / Well-known formats #####################

# JSON log format
[PARSER]
    Name         json
    Format       json
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    on

# Regex to parse only syslog-known log levels
# supported levels https://en.wikipedia.org/wiki/Syslog#Severity_level
[PARSER]
    Name         level_parser_common_keep
    Format       regex
    Regex        /\[\s*(?<level>alert|trace|debug|notice|info|warn(?:ing)?|err(?:or)?|crit(?:ical)?|fatal|severe|emerg(?:ency)?)\s*\]/i
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    On

##################### Service / Applications formats #####################

# MongoDB JSON log format
# format reference https://www.mongodb.com/docs/manual/reference/log-messages/#structured-logging
# TODO: this regex absoluttly incorrect for sylog rfc3164, need to fix it
[PARSER]
    Name         mongodb
    Format       regex
    Regex        ^(?<time>[^ ]*)\s+(?<severity>\w)\s+(?<component>[^ ]+)\s+\[(?<context>[^\]]+)]\s+(?<message>.*?) *(?<ms>(\d+))?(:?ms)?$
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S.%L
    Time_Keep    on

# RabbitMQ log format
# format reference https://www.rabbitmq.com/docs/logging
[PARSER]
    Name         rabbitmq
    Format       regex
    Regex        ^=(?<severity>[^ ]\w+)\s+REPORT[=\S]*[^ =][-:.\d\w]+[\S=]+(?<log>.*)$
    Time_Key     log_time
    Time_Format  %d-%b-%Y::%H:%M:%S
    Time_Keep    off

# PostgreSQL log format
# format reference https://www.postgresql.org/docs/current/runtime-config-logging.html
[PARSER]
    Name         postgres
    Format       regex
    Regex        ^[^A-Z]*\s(?<level>\w*)\W\s(?<log>[^\n]*)
    Time_Key     time
    Time_Format  %s

# Cassandra log format
# format reference https://cassandra.apache.org/doc/latest/cassandra/troubleshooting/reading_logs.html
[PARSER]
    Name         cassandra
    Format       regex
    Regex        ^\[[^\]]*\]\[(?<level>[^\]]*)\]\[\w*\W(?<method>[^\]]*)\](?<log>[^\n]*)
    Time_Key     time
    Time_Format  %s

# Consul log format
# format reference ?
[PARSER]
    Name        consul
    Format      regex
    Regex       ^[^\s]*\s\[(?<level>[^\s]*)\]\s(?<log>[^\n]*)
    Time_Key    time
    Time_Format  %s

# Ingress-nginx logs format
# format reference https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/log-format/
[PARSER]
    Name         k8s-nginx-ingress
    Format       regex
    Regex        ^(?<host>[^ ]*) - (?<user>[^ ]*) \[[^\]]*\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*) "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \[(?<proxy_upstream_name>[^ ]*)\] (\[(?<proxy_alternative_upstream_name>[^ ]*)\] )?(?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<reg_id>[^ ]*).*$
    Time_Key     time
    Time_Format  %d/%b/%Y:%H:%M:%S %z

##################### Multiline parsers #####################

# Multiline parser to build
# WA: the rule "start_state" "/^.+$/" "start_state" need to avoid stuck multiline plugin
[MULTILINE_PARSER]
    Name           multiline_nc
    Type           regex
    flush_timeout  2000
    rule           "start_state"  "{{ .Values.Fluentbit.Aggregator.MultilineFirstLineRegexp }}"   "cont"
    rule           "start_state"  "/^.+$/"                                                        "start_state"
    rule           "cont"         "{{ .Values.Fluentbit.Aggregator.MultilineOtherLinesRegexp }}"  "cont"

##################### For integration test purposes #####################

# Log format for integration tests purposes
[PARSER]
    Name         logId-test
    Format       regex
    Regex        .*logId=\"(?<logId>[a-z0-9_\-]+).*
