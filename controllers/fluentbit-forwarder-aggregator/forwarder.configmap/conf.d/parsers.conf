##################### System formats #####################

# Syslog rfc3164 log format
# for file /var/log/syslog, usually use in Debian, Ubuntu
# TODO: this regex absolutely incorrect for syslog rfc3164, need to fix it
[PARSER]
    Name         syslog
    Format       regex
    Regex        time="(?<time>.{19}).* level=(?<level>.*) msg="(?<log>.*)"$
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    On

# Syslog rfc3164 log format
# for file /var/log/messages, usually use in CentOS, RedHat Enterprise Linux, Oracle Linux, Rocky Linux
# TODO: this regex absolutely incorrect for syslog rfc3164, need to fix it
[PARSER]
    Name         varlogmessages
    Format       regex
    Regex        time="(?<time>.{19}).* level=(?<level>.*) msg="(?<log>.*)"$
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    On

# Linux audit log format
# for file /var/log/audit/audit.log
# format references:
# https://documentation.suse.com/sles/12-SP5/html/SLES-all/cha-audit-comp.html
# https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/security_guide/sec-understanding_audit_log_files
[PARSER]
    Name         audit
    Format       regex
    Regex        ^[a-z=]+(?<type>[^ ]+) [a-z=]+\((?<time>[^:]+)[^a-z]+(?<log>.+)$
    Time_Key     time
    Time_Format  %s

##################### CRI formats #####################

# Docker logs format
[PARSER]
    Name         docker
    Format       json
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    on

##################### Kubernetes formats #####################

# klog format
[PARSER]
    Name        klog_trace_entry
    Format      regex
    Regex       ^(?<level>[VIWEF])(?<date>\d{4}\s+\d{2}:\d{2}:\d{2}\.\d+)\s+(?<pid>\d+)\s+(?<file>[^:]+:\d+)\]\s+(?<short_message>Trace\[(?<trace_id>\d+)\]:\s+"(?<operation>[^"]+)"\s+(?<kv_blob>.*[^(]+)\s+\((?:\d+-[A-Za-z]+-\d{4}\s\d{2}:\d{2}:\d{2}\.\d+)\)\s+\(total\s+time:\s+(?<duration>\d+ms)\):?[\s\S]*)

[PARSER]
    Name        klog_entry
    Format      regex
    Regex       ^(?<level>[VIWEF])(?<date>\d{4}\s+\d{2}:\d{2}:\d{2}\.\d+)\s+(?<pid>\d+)\s+(?<file>[^:]+:\d+)\]\s+(?<short_message>[\s\S]*)$

# CoreDNS
[PARSER]
    Name         coredns
    Format       regex
    Regex        ^\[(?<level>[A-Z]+)\]\s+(?<module>[^:]+):\s+(?:(?<id>\d+)\s+)?(?:(?<domain>[^\s]+)\s+(?<record_type>(?:AAAA|CNAME|MX|NS|TXT|SRV|PTR|SOA|A)):\s+)?(?:(?<file>[a-zA-Z@\-\.\d\/]+:\d+):\s+)?(?<short_message>.*)$
    # Regex        ^\[(?<level>[A-Z]+)\]\s+(?<module>[^:]+):\s+(?:(?<id>\d+)\s+)?(?:(?<domain>[^\s]+)\s+(?<record_type>(?:A|AAAA|CNAME|MX|NS|TXT|SRV|PTR|SOA)))?(?<file>[a-zA-Z@\-\.\d\/]+:\d+)?:\s+(?<short_message>.*)$
    # Regex        ^\[(?<level>[A-Z]+)\]\s+(?<module>[^:]+):\s+(?<id>\d+)?\s+(?:(?<domain>[^\s]+)\s+(?<record_type>A|AAAA|CNAME|MX|NS|TXT|SRV|PTR|SOA))?:\s+(?<short_message>.*)$
    Time_Keep    On

# Kubernetes JSON audit logs of API Server
# for file /var/log/kube-apiserver/audit.log
[PARSER]
    Name         json_apiserver_kube
    Format       json
    Time_Key     requestReceivedTimestamp
    Time_Format  %Y-%m-%dT%T.%LZ
    Time_Keep    On

# Kubernetes JSON audit log format
# for file /var/log/kubernetes/audit/audit.log
[PARSER]
    Name         json_kube
    Format       json
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%T.%LZ
    Time_Keep    On

# Kubernetes logs path, regex to parse metadata from logs path
[PARSER]
    Name         kube-meta
    Format       regex
    Regex        (?<namespace_name>[^_]+)_(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<docker_id>[a-z0-9-]{32,36})\.(?<container_name>.+)\.(\d+).log

##################### OpenShift formats #####################

# OpenShift API Server log format
# for file /var/lib/origin/ocp-audit.log
[PARSER]
    Name         json_ocp
    Format       json
    Time_Key     requestReceivedTimestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%NZ

# Ingress-nginx logs format
# format reference https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/log-format/
[PARSER]
    Name         k8s-nginx-ingress
    Format       regex
    Regex        ^(?<short_message>(?<host>[^ ]*) - (?<user>[^ ]*) \[[^\]]*\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*)) (?<size>[^ ]*) "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \[(?<proxy_upstream_name>[^ ]*)\] (\[(?<proxy_alternative_upstream_name>[^ ]*)\] )?(?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<reg_id>[^ ]*).*$
    Time_Key     time
    Time_Format  %d/%b/%Y:%H:%M:%S %z

##################### Common / Well-known formats #####################

# Logfmt format
# format reference https://brandur.org/logfmt
[PARSER]
    Name                logfmt
    Format              logfmt
    Logfmt_No_Bare_Keys true

# JSON log format
# TODO: it seems this format don't use, do we need it here?
[PARSER]
    Name         json
    Format       json
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S
    Time_Keep    on

##################### Service / Applications formats #####################

# MongoDB JSON log format
# format reference https://www.mongodb.com/docs/manual/reference/log-messages/#structured-logging
[PARSER]
    Name         mongodb_structured
    Format       regex
    # Fatal, Error, Warning, Info, D1-D5 - Debug
    Regex        ^\{"t":\{"\$date":"(?<date>[^"]+)"\},\s*"s":"(?<level>\w\d?)",\s*"c":"(?<component>\w+)",\s*"id":(?<id>\d+),\s*"ctx":"(?<context>[^"]+)",\s*"msg":"(?<short_message>[^"]+)"(?:,\s*"attr":(?<attributes>\{.*\}))?\}$
    Time_Key     time
    Time_Format  %s

# RabbitMQ log format
# format reference https://www.rabbitmq.com/docs/logging
[PARSER]
    Name         rabbitmq
    Format       regex
    Regex        ^=(?<severity>[^ ]\w+)\s+REPORT[=\S]*[^ =][-:.\d\w]+[\S=]+(?<log>.*)$
    Time_Format  %d-%b-%Y::%H:%M:%S
    Time_Keep    Off
    Time_Key     log_time

# PostgreSQL log format
# format reference https://www.postgresql.org/docs/current/runtime-config-logging.html
[PARSER]
    Name         postgres
    Format       regex
    Regex        ^[^A-Z]*(?:[A-Z]{3})?\s+(?<level>\w*)\W\s+(?<short_message>[^\n]*)
    Time_Key     time
    Time_Format  %s

# Cassandra log format
# format reference https://cassandra.apache.org/doc/latest/cassandra/troubleshooting/reading_logs.html
[PARSER]
    Name         cassandra
    Format       regex
    Regex        ^(\[[^\]]*\]\s*)?\[?(?<level>[^\]]*)\]?\s*\[\w*\W(?<method>[^\]]*)\](?<short_message>[^\n]*)
    Time_Key     time
    Time_Format  %s

# Consul log format
# format reference ?
[PARSER]
    Name         consul
    Format       regex
    Regex        ^[^\s]*\s\[(?<level>[^\s]*)\]\s(?<short_message>[^\n]*)
    Time_Key     time
    Time_Format  %s

# Fluentbit log format
[PARSER]
    Name         fluentbit
    Format       regex
    Regex        ^\[(?<date>\d{4}\/\d{2}\/\d{2}\s\d{2}:\d{2}:\d{2})\]\s\[\s*(?<level>[^\]\s]+)\s*\]\s\[(?<component>[^\]]+)\]\s*(?<short_message>[\s\S]+)
    Time_Key     time
    Time_Format  %s

[PARSER]
    Name        java
    Format      regex
    Regex       ^\[(?<date>\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}[\.,]\d{3}Z?)\]\s*\[\s*(?<level>(?:TRACE|DEBUG|INFO|WARN|ERROR))\s*\]\s*(?<short_message>[\s\S]+)
    Time_Key    time
    Time_Format %s

[PARSER]
    Name        opensearch
    Format      regex
    Regex       ^\[(?<date>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[\.,]\d{3}Z?)\]\s*\[\s*(?<level>(?:TRACE|DEBUG|INFO|WARN|ERROR))\s*\]\s*\[\s*(?<logger>[^]]+)\s*\]\s*\[\s*(?<opensearch_node>[^]]+)\s*\](?<short_message>[\s\S]+)
    Time_Key    time
    Time_Format %s
[PARSER]
    Name        qubership
    Format      regex
    Regex       ^\[(?<date>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)\]\s*\[\s*(?<level>(?:TRACE|DEBUG|INFO|WARN|ERROR))\s*\]\s*\[\s*request_id\s*=\s*[^\]\[\s=]+\s*\]\s*\[\s*tenant_id\s*=\s*[^\]\[\s=]+\s*\]\s*\[\s*thread\s*=\s*[^\]\[\s=]+\s*\]\s*\[\s*class\s*=\s*[^\]\[\s=]+\s*\]\s*(?:\s*\[\s*[^\]\[\s=]+\s*=\s*[^\]\[\s=]+\s*\])*\s+(?<short_message>[^\[\]\s][\s\S]+)
    Time_Key    time
    Time_Format %s

# Multiline parser to build
# WA: the rule "start_state" "/^.+$/" "start_state" need to avoid stuckmultiline plugin
[MULTILINE_PARSER]
    Name           multiline_qubership
    Type           regex
    flush_timeout  2000
    rule           "start_state"  "{{ .Values.Fluentbit.Aggregator.MultilineFirstLineRegexp }}"   "cont"
    rule           "start_state"  "/^.+$/"                                                        "start_state"
    rule           "cont"         "{{ .Values.Fluentbit.Aggregator.MultilineOtherLinesRegexp }}"  "cont"


[MULTILINE_PARSER]
    Name            multiline_klog
    Type            regex
    Flush_timeout   2000
    Rule            "start_state"    "/^[VIWEF]\d{4}\s*\d{2}:\d{2}:\d{2}\.\d+\s+\d+\s*[^:]+:\d+\]/"  "cont"
    Rule            "cont"           "/^(?![VIWEF]\d{4}\s*\d{2}:\d{2}:\d{2}\.\d+\s+\d+\s*[^:]+:\d+\])/"  "cont"

##################### For integration test purposes #####################

[PARSER]
    Name        logId-test
    Format      regex
    Regex       .*logId=\"(?<logId>[a-z0-9_\-]+).*
