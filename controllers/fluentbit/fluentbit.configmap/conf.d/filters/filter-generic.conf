# First, we need to use specific parsers to parse the logs for Kubernetes components
# Kubernetes components
# DaemonSet: kube-proxy
# Pods: kube-scheduler, kube-controller-manager, kube-apiserver
# Should it be even here in generic filters?
[FILTER]
    Name                 parser
    Match                pods*
    Key_Name             log
    Parser               klog_entry
    Reserve_Data         On
    Preserve_Key         On

[FILTER]
    Name                 parser
    Match                pods*
    Key_Name             log
    Parser               klog_trace_entry
    Reserve_Data         On
    Preserve_Key         On

# CoreDNS
# Deployments: coredns
[FILTER]
    Name                 parser
    Match_regex          pods.*coredns.*
    Key_Name             log
    Parser               coredns
    Reserve_Data         On
    Preserve_Key         On

# NGINX ingress controller
[FILTER]
    Name                 parser
    Match_Regex          pods.*nginx.*
    Key_Name             log
    Parser               k8s-nginx-ingress
    Reserve_Data         On
    Preserve_Key         On

# Second, we need to use specific parsers to parse the logs for well-known
# third-party applications with custom log formats

# Cassandra
[FILTER]
    Name                 parser
    Match_Regex          pods.*cassandra.*
    Key_Name             log
    Parser               cassandra
    Reserve_Data         On
    Preserve_Key         On

# Consul
[FILTER]
    Name                 parser
    Match_Regex          pods.*consul.*
    Key_Name             log
    Parser               consul
    Reserve_Data         On
    Preserve_Key         On

# PostgreSQL
# StatefulSet "pg-patroni-nodeX" (example, pg-patroni-node1)
[FILTER]
    Name                 parser
    Match_Regex          pods.*(postgres|patroni|pg).*
    Key_Name             log
    Parser               postgres
    Reserve_Data         On
    Preserve_Key         On

[FILTER]
    Name                 parser
    Match                pods*
    Key_Name             log
    Parser               json
    Reserve_Data         On
    Preserve_Key         On

# Jaeger
[FILTER]
    Name                 modify
    Match_Regex          pods.*jaeger.*
    Remove               ts

# MongoDB, StatefulSet "cnfrsX-X" (example, cnfrs0-0)
# mongo container in graylog statefulset
[FILTER]
    Name                 modify
    Match_Regex          pods.*(mongo.*cnfrs|graylog.*mongo).*
    Rename               ctx    context
    Rename               c      component
    Rename               s      level
    Rename               attr   attributes
    Hard_rename          msg    short_message

[FILTER]
    Name                 nest
    Match_Regex          pods.*(mongo.*cnfrs|graylog.*mongo).*
    Operation            lift
    Wildcard             t*
    Nest_under           t
    Remove_prefix        t.

[FILTER]
    Name                 modify
    Match_Regex          pods.*(mongo.*cnfrs|graylog.*mongo).*
    Hard_rename          $date   date

# ArgoCD
# Deployments: argocd-server, argocd-repo-server, argocd-dex-server, argocd-notifications-controller, argocd-applicationset-controller
# StatefulSet: argocd-application-controller
[FILTER]
    Name                parser
    Match_Regex         pods.*argocd-(?!redis).*
    Key_Name            log
    Parser              logfmt
    Reserve_Data        On
    Preserve_Key        On

[FILTER]
    Name                record_modifier
    Match_Regex         pods.*argocd-(?!redis).*
    Remove_Key          msg

# Fluentbit
[FILTER]
    Name                parser
    Match_Regex         pods.*fluentbit.*
    Key_Name            log
    Parser              fluentbit
    Reserve_Data        On
    Preserve_Key        On

# Java common format
[FILTER]
    Name           parser
    Match          pods*
    Key_Name       log
    Parser         java
    Reserve_Data   On
    Preserve_Key   On

# Opensearch
[FILTER]
    Name           parser
    Match_Regex    pods.*opensearch-\d{1,2}_.*
    Key_Name       log
    Parser         opensearch
    Reserve_Data   On
    Preserve_Key   On

# Qubership [key=value]
[FILTER]
    Name                parser
    Match               pods*
    Key_Name            log
    Parser              qubership
    Reserve_Data        On
    Preserve_Key        On
