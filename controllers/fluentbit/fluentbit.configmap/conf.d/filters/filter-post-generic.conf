# Check if log was parsed by comparing original fields count and final fields count
[FILTER]
    Name                lua
    Match_regex         (pods|klog).*
    Script              /fluent-bit/etc/count_fields.lua
    Call                second_count_fields

# Try to extract level from log
[FILTER]
    Name                parser
    Match               pods*
    Key_Name            log
    Parser              level_parser_common_keep
    Reserve_Data        On
    Preserve_Key        On

# Copy content of log field to short_message if short_message doesn't exist
[FILTER]
    Name                modify
    Match_regex         (pods|klog).*
    Copy                log          short_message

# Parse dynamic [key=value] labels if log field exists and parsed = true
[FILTER]
    Name                lua
    Match               pods*
    Script              /fluent-bit/etc/parse_key_value.lua
    Call                kv_parse

# If log was parsed
# Rename log field to original_log (to be removed in future releases)
# Remove fields used to make a decision on whether message was parsed
[FILTER]
    Name                modify
    Match_regex         (pods|klog).*
    Condition           Key_value_matches  parsed  true
    Hard_rename         log                original_log
    Remove              orig_field_count
    Remove              field_count

# Add mandatory fields for gelf format to all records
[FILTER]
    Name                record_modifier
    Match               *
    Record              hostname    ${HOSTNAME}

[FILTER]
    Name                record_modifier
    Match               *
    Record              nodename    ${NODE_NAME}

{{- if .Values.Fluentbit.ExtraFields }}
[FILTER]
    Name    record_modifier
    Match   *
    {{- range $key, $value := .Values.Fluentbit.ExtraFields }}
    Record  {{ $key }} {{ $value }}
    {{- end }}
{{- end }}
