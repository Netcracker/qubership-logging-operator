{{- if .Values.Fluentd.MockKubeData }}
@include /fluentd/etc/filter-k8s-metadata-mock.conf
{{- else }}
<filter raw.kubernetes.**>
  @type kubernetes_metadata
  @log_level warn
  kubernetes_url https://kubernetes.default.svc.cluster.local
  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
  ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  annotation_match ^qubership\.org\/collect-logs$
  watch "#{ENV['WATCH_KUBERNETES_METADATA']}"
</filter>
{{- end }}

<filter raw.kubernetes.var.log.**>
  @type parser
  emit_invalid_record_to_error false
  key_name log
  reserve_data true
  reserve_time true
  <parse>
    @type multi_format
    <pattern>
      format json
    </pattern>
    <pattern>
      format regexp
      expression /(\A\[[^\[\]]+\].*\[(?<level>alert|trace|debug|notice|info|warn(?:ing)?|err(?:or)?|crit(?:ical)?|fatal|severe|emerg(?:ency)?)\s*\])|(\A(?<level>[IWEF])\d{4}\s+\d{2}:\d{2}:\d{2}.\d{6}\s+(?<thread>\d+)\s+(?<class>[^:]+:\d+)\]\s+).*/i
    </pattern>
  </parse>
</filter>

<filter raw.kubernetes.var.log.**>
  @type record_transformer
  enable_ruby
  <record>
    namespace ${record['kubernetes']['container_name'] == 'events-reader' && !record['involvedObjectNamespace'].nil? ? record['involvedObjectNamespace'] : record['kubernetes']['namespace_name']}
    container ${record['kubernetes']['container_name']}
    pod ${record['kubernetes']['pod_name']}
    level_unknown ${record['level'].nil? || record['level'].empty? ? 'true' : 'false'}
    level ${(record['level'] || 'info').strip.delete('"')}
    labels ${(record['kubernetes']['labels']).to_s.gsub('/', '_').to_s.gsub('=>', ':')}
    docker_ts ${Time.parse(record['time']).to_f}
  </record>
  renew_time_key docker_ts
  remove_keys stream,docker_ts
</filter>

<filter raw.kubernetes.var.log.**>
  @type record_transformer
  remove_keys $.kubernetes
</filter>

<filter raw.kubernetes.var.log.**jaeger**>
  @type record_transformer
  remove_keys ts
</filter>

{{- if eq .Values.Fluentd.CloudEventsReaderFormat "json" }}
<filter raw.kubernetes.var.log.**events-reader**>
  @type record_transformer
  remove_keys $.container,$.pod,$.labels,$.involvedObjectNamespace
</filter>
{{- end }}
